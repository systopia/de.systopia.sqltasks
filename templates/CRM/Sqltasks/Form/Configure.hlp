{*-------------------------------------------------------+
| SYSTOPIA SQL TASKS EXTENSION                           |
| Copyright (C) 2017 SYSTOPIA                            |
| Author: B. Endres (endres@systopia.de)                 |
+--------------------------------------------------------+
| This program is released as free software under the    |
| Affero GPL license. You can redistribute it and/or     |
| modify it under the terms of this license which you    |
| can read by viewing the included agpl.txt or online    |
| at www.gnu.org/licenses/agpl.html. Removal of this     |
| copyright header is strictly prohibited without        |
| written permission from the original author(s).        |
+-------------------------------------------------------*}


{htxt id='id-configure-description'}
  <p>{ts domain="de.systopia.sqltasks"}Describing comprehensively what your task does is essential for anyone to understand whether it's safe to run or disable it. That includes yourself in six months, when you will have forgotten all about this.{/ts}</p>
{/htxt}

{htxt id='id-configure-category'}
  <p>{ts domain="de.systopia.sqltasks"}This is merely for documentation purposes, you can pick any name you want.{/ts}</p>
{/htxt}

{htxt id='id-configure-parallel'}
  <p>{ts domain="de.systopia.sqltasks"}This option lets you decide whether a task should run in parallel. The following options are available:{/ts}</p>

  <dl>
    <dt>{ts domain="de.systopia.sqltasks"}No{/ts}</dt>
    <dd>{ts domain="de.systopia.sqltasks"}The task will not run if any other tasks are already running.{/ts}</dd>
    <dt>{ts domain="de.systopia.sqltasks"}With other running tasks{/ts}</dt>
    <dd>{ts domain="de.systopia.sqltasks"}The task will be executed even if other tasks are still running, but not if the task itself is already running.{/ts}</dd>
    <dt>{ts domain="de.systopia.sqltasks"}Always (multiple instances){/ts}</dt>
    <dd>{ts domain="de.systopia.sqltasks"}The task will always be executed, potentially causing multiple instances of the task to run in parallel.{/ts}</dd>
  </dl>
  <p><strong>{ts domain="de.systopia.sqltasks"}Important: With the last option, you are responsible for ensuring multiple instances of the task can run in parallel. That means keeping all identifiers (like table names) unique and ensuring no deadlocks occur.{/ts}</strong></p>
{/htxt}

{htxt id='id-configure-main'}
  <p>{ts domain="de.systopia.sqltasks"}This is the main script. You can use it to create a helper table or view to drive the actions listed below. Of course you could also use this script to perform the required changes right in the DB, but this is usually discouraged as it bypasses CiviCRM logic.{/ts}</p>
  <p>{ts domain="de.systopia.sqltasks"}You can paste and run <i>any</i> complete SQL script in here. <strong>But beware</strong>: with great power comes great responsibility!{/ts}</p>
  <p>{ts domain="de.systopia.sqltasks"}{/ts}</p>
  <p>{ts domain="de.systopia.sqltasks"}We recommend developing complex SQL scripts in an external editor, and simply copy/pasting it here.{/ts}</p>
{/htxt}

{htxt id='id-configure-post'}
  <p>{ts domain="de.systopia.sqltasks"}It's considered good practice to clean up any helper tables that you created with the main script. This way you can make sure that you don't leave any dependencies behind.{/ts}</p>
{/htxt}

{htxt id='id-configure-exectime'}
  <p>{ts domain="de.systopia.sqltasks"}Set the exact <i>Weekday / Day / Hour / Minute</i> when the job will be executed, on the first cron call after this datetime.{/ts}</p>
{/htxt}

{htxt id='id-user-input'}
  <p>{ts domain="de.systopia.sqltasks"}If you enable this flag, execution of this task requires an input value. The value may be entered manually by the user before execution, or it could be provided programmatically via the API or e.g. by the CiviRules action integration. The input value will be provided as an SQL variable called <strong>@input</strong> within the main script.{/ts}</p>
{/htxt}

{htxt id='id-run-permissions'}
  <p>{ts domain="de.systopia.sqltasks"}List of permissions which will be checked before task is ran. Administrator permission will be used if no other permission is selected. Please check if your cron user has sufficient permissions.{/ts}</p>
{/htxt}

{htxt id='id-abort-on-error'}
  <p>{ts domain="de.systopia.sqltasks"}Enable this flag to stop the execution of the task after an error occurred in an action. Subsequent actions (except for the ErrorHandler) will be skipped.{/ts}</p>
{/htxt}
